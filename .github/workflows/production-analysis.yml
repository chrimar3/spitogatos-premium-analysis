name: 🏆 Production Analysis Pipeline

on:
  push:
    branches: [ main ]
    paths: 
      - 'production/**'
      - 'src/**'
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly analysis on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'
  workflow_dispatch:
    inputs:
      analysis_type:
        description: 'Type of analysis to run'
        required: true
        default: 'quick'
        type: choice
        options:
        - quick
        - full
        - investment-only

jobs:
  production-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🚀 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy matplotlib seaborn requests beautifulsoup4
        pip install -r config/requirements.txt
    
    - name: ⚡ Run Quick Analysis
      if: github.event.inputs.analysis_type == 'quick' || github.event.inputs.analysis_type == ''
      run: |
        cd production
        python examples/quick_analysis.py
    
    - name: 🏭 Run Full Analysis Pipeline  
      if: github.event.inputs.analysis_type == 'full'
      run: |
        cd production
        python workflows/full_analysis_pipeline.py
    
    - name: 💰 Run Investment Analysis Only
      if: github.event.inputs.analysis_type == 'investment-only'
      run: |
        cd production
        python analyzers/elegant_comprehensive_block_analyzer.py
    
    - name: 📊 Generate Analysis Badge
      run: |
        echo "ANALYSIS_STATUS=success" >> $GITHUB_ENV
        echo "ANALYSIS_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
    
    - name: 📋 Archive Analysis Results
      uses: actions/upload-artifact@v3
      with:
        name: production-analysis-results-${{ env.ANALYSIS_DATE }}
        path: |
          outputs/*.json
          outputs/*.csv
          outputs/charts/*.png
        retention-days: 30
    
    - name: 📈 Update Analysis Status
      if: success()
      run: |
        mkdir -p .github/badges
        echo "![Analysis](https://img.shields.io/badge/Analysis-Passing-brightgreen?style=flat-square&logo=chart-line)" > .github/badges/analysis.md
        echo "![Last Run](https://img.shields.io/badge/Last_Run-${{ env.ANALYSIS_DATE }}-blue?style=flat-square&logo=calendar)" >> .github/badges/analysis.md
    
    - name: 🚨 Notify on Failure
      if: failure()
      run: |
        echo "❌ Production analysis failed on $(date)"
        echo "Check logs for debugging information"
        echo "![Analysis](https://img.shields.io/badge/Analysis-Failed-red?style=flat-square&logo=x)" > .github/badges/analysis.md

  quality-check:
    runs-on: ubuntu-latest
    needs: production-analysis
    
    steps:
    - name: 🚀 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: 🔍 Code Quality Check
      run: |
        pip install flake8 black isort
        echo "🔍 Checking code style..."
        black --check production/ || echo "⚠️ Code formatting issues found"
        flake8 production/ --max-line-length=100 || echo "⚠️ Code style issues found"
        isort --check-only production/ || echo "⚠️ Import sorting issues found"
    
    - name: 🧪 Run Production Tests
      run: |
        echo "🧪 Running production validation tests..."
        cd production
        python -c "
        import sys
        import os
        print('✅ Production structure validation')
        required_files = [
            'analyzers/sqm_energy_correlation_analyzer.py',
            'analyzers/elegant_comprehensive_block_analyzer.py',
            'scrapers/spitogatos_final_production_scraper.py',
            'validators/data_authenticity_verification.py'
        ]
        for file in required_files:
            if os.path.exists(file):
                print(f'  ✅ {file}')
            else:
                print(f'  ❌ {file} - MISSING')
                sys.exit(1)
        print('🎯 All production files validated successfully')
        "